# Generated by Django 4.1.7 on 2023-03-09 20:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('successifully_installed', models.BooleanField(default=True)),
                ('challenges_faced', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_directory_id', models.CharField(blank=True, max_length=255, null=True)),
                ('tag', models.CharField(max_length=255, unique=True)),
                ('serial_tag', models.CharField(max_length=255, unique=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('colour', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('allocated', models.BooleanField(default=False)),
                ('is_assigned', models.BooleanField(default=False)),
                ('registration_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('held_in', models.BooleanField(default=False)),
                ('locked', models.BooleanField(default=False)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('specs', models.CharField(blank=True, max_length=255, null=True)),
                ('year_of_purchase', models.DateField(blank=True, null=True)),
                ('on_repairs', models.BooleanField(default=False)),
                ('date_of_manufacturing', models.DateField(blank=True, null=True)),
                ('product_id', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('bios_date', models.CharField(blank=True, max_length=10, null=True)),
                ('obsolete', models.BooleanField(default=False)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AssignedTo', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'asset',
                'ordering': ('-tag',),
                'permissions': (('can_create_asset', 'Can Create Asset'),),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AssetCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('life_span_in_years', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Asset Category',
                'verbose_name_plural': 'Asset Categories',
                'db_table': 'asset_category',
                'ordering': ['name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AssetClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssetTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason_for_transfer', models.CharField(blank=True, max_length=255, null=True)),
                ('external', models.BooleanField(default=False)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('status_comment', models.CharField(blank=True, max_length=300, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('date_initiated', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_approved', models.DateTimeField(blank=True, null=True)),
                ('date_of_asset_arrival', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_by_receiver', models.BooleanField(default=False)),
                ('received', models.BooleanField(default=False)),
                ('draw_back', models.BooleanField(default=False)),
                ('returned', models.BooleanField(default=False)),
                ('narration', models.CharField(blank=True, max_length=255, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approver', to=settings.AUTH_USER_MODEL)),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset', to='app.asset')),
                ('being_moved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mover', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Asset Transfer',
                'verbose_name_plural': 'Asset Transfers',
                'ordering': ['reference'],
                'permissions': (('can_transfer_internal', 'Transfer Internally'), ('can_transfer_external', 'Transfer Externally'), ('can_transfer_asset', 'Transfer Asset'), ('can_approve_asset_transfer', 'Approve Transfer'), ('can_assign_asset', 'Assign Asset')),
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('email_address', models.CharField(max_length=70)),
                ('phone_number', models.CharField(max_length=90)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('source', models.CharField(max_length=255)),
                ('userid', models.CharField(max_length=80)),
                ('branch', models.CharField(max_length=50)),
                ('brn', models.CharField(max_length=50)),
                ('account_number', models.CharField(blank=True, max_length=25, null=True)),
                ('card_number', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'db_table': 'customer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('departmental_assets', models.ManyToManyField(blank=True, to='app.asset')),
                ('head', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'department',
                'ordering': ['name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReasonForTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ram_size', models.IntegerField(null=True)),
                ('processor', models.CharField(blank=True, max_length=255, null=True)),
                ('hdd_size', models.IntegerField()),
                ('has_ssd', models.BooleanField(default=False)),
                ('has_hdd', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TransferType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='WorkBranch',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, max_length=4, null=True, unique=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('default_extension', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'verbose_name_plural': 'Branches',
            },
        ),
        migrations.CreateModel(
            name='UserRights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved_at', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rights_approved_by', to=settings.AUTH_USER_MODEL)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rights_assignee', to=settings.AUTH_USER_MODEL)),
                ('requesting_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requesting_user', to=settings.AUTH_USER_MODEL)),
                ('watchers', models.ManyToManyField(related_name='user_rights_watchers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubDepartment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(max_length=255, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.department')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Sub Departments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RoleGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
                ('head', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('notification_type', models.CharField(max_length=50)),
                ('subject', models.CharField(max_length=120)),
                ('content', models.CharField(max_length=1000)),
                ('related_params', models.CharField(max_length=100, null=True)),
                ('date_generated', models.DateTimeField(default=django.utils.timezone.now)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('transfer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.assettransfer')),
            ],
            options={
                'db_table': 'notification',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HardwareRequisition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('date_logged', models.DateField(auto_now_add=True, null=True)),
                ('reason_for_request', models.TextField(blank=True, null=True)),
                ('replacement', models.BooleanField(default=False)),
                ('justification_for_purchase', models.TextField(blank=True, null=True)),
                ('line_manager_approved', models.BooleanField(default=False)),
                ('line_manager_rejected', models.BooleanField(default=False)),
                ('line_manager_comment', models.TextField(blank=True, null=True)),
                ('authorizer_accepted', models.BooleanField(blank=True, default=False, null=True)),
                ('authorizer_rejected', models.BooleanField(default=False, null=True)),
                ('department_decided', models.BooleanField(default=False)),
                ('authorizer_justification', models.TextField(blank=True, null=True)),
                ('infrastructure_manager_accepted', models.BooleanField(default=False, null=True)),
                ('infrastructure_manager_rejected', models.BooleanField(default=False, null=True)),
                ('infrastructure_manager_reason_for_action', models.CharField(blank=True, max_length=255, null=True)),
                ('infrastructure_decided', models.BooleanField(default=False)),
                ('head_of_technology_services_accepted', models.BooleanField(default=False, null=True)),
                ('head_of_technology_services_rejected', models.BooleanField(default=False, null=True)),
                ('head_of_technology_services_reason_for_action', models.CharField(blank=True, max_length=255, null=True)),
                ('head_of_technology_services_decided', models.BooleanField(default=False)),
                ('purcharsed', models.BooleanField(default=False)),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.asset')),
                ('authorized_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='authorized_hardware_requests', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.department')),
                ('device_requested', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='app.assetcategory')),
                ('head_of_technology_services', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='head_of_technology_services', to=settings.AUTH_USER_MODEL)),
                ('infrastructure_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='infrastructure_manager', to=settings.AUTH_USER_MODEL)),
                ('line_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('requisitioner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_hardware_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['device_requested', 'requisitioner'],
            },
        ),
        migrations.CreateModel(
            name='ExternalCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('details', models.CharField(max_length=255, null=True)),
                ('tel', models.CharField(max_length=255, null=True)),
                ('cell', models.CharField(max_length=255, null=True)),
                ('contact_person', models.CharField(max_length=255, null=True)),
                ('assets_sent', models.ManyToManyField(blank=True, to='app.asset')),
            ],
            options={
                'permissions': (('can_create_company', 'can create company'), ('can_delete_company', 'can delete company'), ('can_update_company', 'can update company')),
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employee_number', models.CharField(blank=True, max_length=255, null=True)),
                ('work_address', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=255, null=True)),
                ('work_branch', models.CharField(blank=True, max_length=255, null=True)),
                ('extension', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('id_deployer', models.BooleanField(default=False)),
                ('profile_level', models.CharField(blank=True, choices=[('VIP', 'VIP'), ('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], default='NORMAL', max_length=255)),
                ('is_authorized', models.BooleanField(default=False)),
                ('is_manager', models.BooleanField(default=False)),
                ('is_procurer', models.BooleanField(default=False)),
                ('is_deployer', models.BooleanField(default=False)),
                ('updated', models.BooleanField(default=False)),
                ('is_head_of_dept', models.BooleanField(default=False)),
                ('IN_manager', models.BooleanField(default=False)),
                ('is_head_of_tech', models.BooleanField(default=False)),
                ('assigned_assets', models.ManyToManyField(blank=True, to='app.asset')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.workbranch')),
                ('department', models.ForeignKey(blank=True, db_column='department_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.department')),
                ('line_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_leader', to=settings.AUTH_USER_MODEL)),
                ('sub_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.subdepartment')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'db_table': 'employee',
                'permissions': (('can_create_company', 'can create company'), ('can_delete_company', 'can delete company'), ('can_update_company', 'can update company'), ('can_give_rights', 'can give rights')),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset_in_configuration', to='app.asset')),
                ('configured_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='configured_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company', to='app.externalcompany'),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='dest_branch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dest_branch', to='app.workbranch'),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='dest_department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receiving_department', to='app.department'),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='external_company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.externalcompany'),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='former_custodian',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='former_custodian', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='logged_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='multiple_assets',
            field=models.ManyToManyField(blank=True, to='app.asset'),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='new_custodian',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='new_custodian', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='reason',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reason', to='app.reasonfortransfer'),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='src_branch',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='src_branch', to='app.workbranch'),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='src_department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transferring_department', to='app.department'),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.transfertype'),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='watchers',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AssetPool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('assets', models.ManyToManyField(to='app.asset')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
            ],
        ),
        migrations.AddField(
            model_name='assetcategory',
            name='asset_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.assetclass'),
        ),
        migrations.AddField(
            model_name='assetcategory',
            name='department_in_charge',
            field=models.ForeignKey(blank=True, db_column='department_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.department'),
        ),
        migrations.AddField(
            model_name='assetcategory',
            name='sub_department',
            field=models.ForeignKey(blank=True, db_column='sub_department_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_department', to='app.subdepartment'),
        ),
        migrations.CreateModel(
            name='AssetAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset_in_assignment', to='app.asset')),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignee', to=settings.AUTH_USER_MODEL)),
                ('assigner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigner', to=settings.AUTH_USER_MODEL)),
                ('req', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.hardwarerequisition')),
            ],
        ),
        migrations.AddField(
            model_name='asset',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.assetcategory'),
        ),
        migrations.AddField(
            model_name='asset',
            name='custodian_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='asset',
            name='deployment_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deployment_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='asset',
            name='external_custodian',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.externalcompany'),
        ),
        migrations.AddField(
            model_name='asset',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='app.workbranch'),
        ),
        migrations.AddField(
            model_name='asset',
            name='registered_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registered_by', to=settings.AUTH_USER_MODEL),
        ),
    ]
